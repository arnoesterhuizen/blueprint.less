/* --------------------------------------------------------------

   grid.css
   * Sets up an easy-to-use grid of x columns.

   By default, the grid is 950px wide, with 24 columns
   spanning 30px, and a 10px margin between columns.

   If you need fewer or more columns, namespaces or semantic
   element names, the following

-------------------------------------------------------------- */
@width: 950px;
@column_width: 30px;
@gutter_width: 10px;

/* A container should group all your columns. */
.container {
  width: @width;
  margin: 0 auto;
}

/* Use this class on any .span / container to see the grid. */
.showgrid (@grid: 'src/grid.png') {
  background: url(@grid);
}


/* Columns
-------------------------------------------------------------- */

/* Sets up basic grid floating and margin. */
.column () {
	float: left;
	margin-right: @gutter_width;
}

/* Use this mixin to set the width of a column. you should avoid @levels wider then @width */
.span (@column: 1) {
	.column;
	width: (@column + ((@column_width - 1) * (@column + @gutter_width)));
}

/* The last column in a row needs this class. */
.last { margin-right: 0; }

/* Use these classes to set the width of an input. */
.input_span (@column: 1) {
  border-left-width: 1px;
  border-right-width: 1px;
  padding-left: 5px;
  padding-right: 5px;
  width: ((@column * @column_width) + ((@column - 1) * 10px) - 12px);
}

/* Add these to a column to append empty cols. */
.append (@column: 1) {
	padding-right: (@column * (@column_width + @gutter_width));
}

/* Add these to a column to prepend empty cols. */

.prepend (@column: 1) {
	padding-left: (@column * (@column_width + @gutter_width));
}

/* Border on right hand side of a column. */
.border(@border_color:#eee, @border_style:solid) {
  padding-right:(@gutter_width * 0.5 - 1);
  margin-right:(@gutter_width * 0.5);
  border-right: 1px @border_style @border_color;
}

/* Border with more whitespace, spans one column. */
.colborder(@border_color:#eee, @border_style:solid) {
  padding-right:((@column_width + 2 * @gutter_width - 1)/2);
  margin-right:((@column_width + 2 * @gutter_width)/2);
  border-right: 1px @border_style @border_color;
}


/* Use these classes on an element to push it into the
next column, or to pull it into the previous column.  */

.pull(@column: 1) {
	margin-left:(@column * (@column_width + @gutter_width));
	margin-left: (@column * @level * -1) + (@level * -10px);
	float: left; 
	position:relative;
}

.push (@column: 1) {
	margin:0 -(@column * (@column_width + @gutter_width)) 1.5em (@column * (@column_width + @gutter_width));
	float: right; 
	position:relative;
}

/* Misc classes and elements
-------------------------------------------------------------- */

/* In case you need to add a gutter above/below an element */
div.prepend-top, .prepend-top {
  margin-top:1.5em;
}
div.append-bottom, .append-bottom {
  margin-bottom:1.5em;
}

/* Use a .box to create a padded box inside a column.  */
.box(@background_color:#ccc) {
  padding: 1.5em;
  margin-bottom: 1.5em;
  background:@background_color;
}

/* Use this to create a horizontal ruler across a column. */
hr {
  background: #ddd;
  color: #ddd;
  clear: both;
  float: none;
  width: 100%;
  height: 1px;
  margin: 0 0 1.45em;
  border: none;
}

hr.space {
  background: #fff;
  color: #fff;
  visibility: hidden;
}


/* Clearing floats without extra markup
   Based on Simple Clearing of Floats at Sitepoint
   [http://www.sitepoint.com/simple-clearing-of-floats/] &
   [http://www.quirksmode.org/css/clearing.html] & */

.clearfix, .container {
  overflow: hidden;
  width: 100%;
}

/* Regular clearing
   apply to column that should drop below previous ones. */

.clear { clear:both; }